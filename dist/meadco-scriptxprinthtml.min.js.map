{"version":3,"file":"meadco-scriptxprinthtml.min.js","names":["extendMeadCoNamespace","jobPrinterName","defaultPrinterName","moduleversion","mPageMarginUnits","DEFAULT","INCHES","MM","mPageOrientation","LANDSCAPE","PORTRAIT","mPrintingPass","ALL","ODD","EVEN","BooleanOption","TRUE","FALSE","settingsCache","header","footer","headerFooterFont","viewScale","locale","navigator","languages","length","language","timezoneOffset","shortDateFormat","longDateFormat","printBackgroundColorsAndImages","page","orientation","units","MeadCo","ScriptX","Print","MeasurementUnits","margins","left","top","bottom","right","extraHeadersAndFooters","pageRange","printingPass","jobTitle","documentUrl","document","URL","iSettings","str","log","x","b","allPagesHeader","v","allPagesFooter","firstPageHeader","firstPageFooter","extraFirstPageFooter","allHeaderHeight","allFooterHeight","firstHeaderHeight","firstFooterHeight","extraFirstFooterHeight","enumOrientation","enumUnits","n","updateSettingsWithServerDefaults","sDefaults","Date","getTimezoneOffset","warn","getBaseHref","port","window","location","protocol","hostname","pathname","persistData","$element","jQuery","each","this","setAttribute","types","split","len","i","val","$select","innerHTML","persistData2","rootElement","querySelectorAll","forEach","e","t","value","o","removeAttribute","printableHtmlOfDocument","$htmlDoc","$html","clone","remove","base","href","prepend","html","printableHtmlOfDocument2","theDocument","documentElement","cloneNode","querySelector","createElement","outerHTML","documentContent","fetchEnabled","frameContent","sFrame","$frame","Error","contents","find","f","getElementById","frames","contentWindow","printHtmlAtServer","contentType","content","title","fnDone","fnCallback","data","htmlPrintSettings","printHtml","previewHtml","deviceSettingsForAsync","deviceSettings","printerName","pws","body","appendChild","childNodes","className","dot","style","display","requestHtmlPreview","errorIfNotNull","sDownloadUrl","jobId","previewUrl","makeServiceEndPoint","serviceUrl","encodeURIComponent","ifrm","width","height","visibility","addEventListener","event","setSystemDefaultPrinterAsync","postMessage","setTimeout","errorMsg","error","reportError","errorTxt","PageMarginUnits","PageOrientation","PrintingPasses","settings","documentContentToPrint","frameContentToPrint","printDocument","fnCallOnDone","ContentType","INNERHTML","printFrame","previewDocument","previewFrame","printFromUrl","sUrl","sHtml","HTML","connectLite","serverUrl","licenseGuid","connect","onFail","getFromServer","device","connectDeviceAndPrinters","availablePrinters","connectAsync","resolve","reject","version"],"sources":["meadco-scriptxprinthtml.js"],"mappings":"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","ignoreList":[],"sourcesContent":["/**\r\n * MeadCo.ScriptX.Print.HTML\r\n *\r\n * A static class providing printing of HTML content.\r\n * \r\n * Requires: meadco-core.js, meadco-scriptxprint.js\r\n *\r\n * The purpose of these libraries is to assist those with a body of client javascript code targetting use of the ScriptX Add-On for Internet Explorer. These libraries assist with continuing with a large part of the code\r\n * intact when transitioning to using ScriptX.Services instead/as well.\r\n * \r\n * Includes processing of calls to the print api that return \"printing to file\" including collecting the\r\n * file output.\r\n *\r\n * @namespace MeadCoScriptXPrintHTML\r\n *\r\n */\r\n\r\n; (function (name, definition) {\r\n    extendMeadCoNamespace(name, definition);\r\n})('MeadCo.ScriptX.Print.HTML', function () {\r\n\r\n    var moduleversion = \"1.16.1.0\";\r\n\r\n    /**\r\n     * Enum to describe the units used on measurements - **NOTE** please use MeadCo.ScriptX.Print.MeasurementUnits instead\r\n     *\r\n     * @memberof MeadCoScriptXPrintHTML\r\n     * @typedef {number} PageMarginUnits\r\n     * @deprecated\r\n     * @enum {PageMarginUnits}\r\n     * @readonly\r\n     * @property {number} DEFAULT 0 use the default at the print server\r\n     * @property {number} INCHES 1 \r\n     * @property {number} MM 2 millimeters\r\n     */\r\n    var mPageMarginUnits = {\r\n        DEFAULT: 0,\r\n        INCHES: 1,\r\n        MM: 2\r\n    };\r\n\r\n    /**\r\n     * Enum to describe the orientation of the paper\r\n     *\r\n     * @memberof MeadCoScriptXPrintHTML    \r\n     * @typedef {number} PageOrientation\r\n     * @enum {PageOrientation}\r\n     * @readonly\r\n     * @property {number} DEFAULT 0 use the default at the print server\r\n     * @property {number} LANDSCAPE 1 \r\n     * @property {number} PORTRAIT 2 \r\n     */\r\n    var mPageOrientation = {\r\n        DEFAULT: 0,\r\n        LANDSCAPE: 1,\r\n        PORTRAIT: 2\r\n    };\r\n\r\n    /**\r\n     * Enum to describe the pages to be printed\r\n     *\r\n     * @memberof MeadCoScriptXPrintHTML    \r\n     * @typedef {number} PrintingPass\r\n     * @enum {PrintingPass}\r\n     * @readonly\r\n     * @property {number} DEFAULT 0 use the default at the print server\r\n     * @property {number} ALL 1 print all pages\r\n     * @property {number} ODD 2 print odd numbered pages only \r\n     * @property {number} EVEN 3 print even numbered pages only \r\n     */\r\n    var mPrintingPass = {\r\n        DEFAULT: 0,\r\n        ALL: 1,\r\n        ODD: 2,\r\n        EVEN: 3\r\n    };\r\n\r\n    /**\r\n     * Enum to describe a boolean value or use the default \r\n     *\r\n     * @memberof MeadCoScriptXPrintHTML\r\n     * @typedef {number} BooleanOption\r\n     * @enum {BooleanOption}\r\n     * @readonly\r\n     * @property {number} DEFAULT 0 use the default at the print server\r\n     * @property {number} TRUE 1 \r\n     * @property {number} FALSE 2 \r\n     */\r\n    var BooleanOption = {\r\n        DEFAULT: 0,\r\n        TRUE: 1,\r\n        FALSE: 2\r\n    };\r\n\r\n    /**\r\n     * @typedef Margins\r\n     * @memberof MeadCoScriptXPrintHTML\r\n     * @property {number} left left margin in requested units\r\n     * @property {number} top top margin in requested units\r\n     * @property {number} right right margin in requested units\r\n     * @property {number} bottom bottom margin in requested units\r\n     * */\r\n    var Margins;  // for doc generator\r\n\r\n    /**\r\n     * @typedef PageSettings\r\n     * @memberof MeadCoScriptXPrintHTML\r\n     * @property {PageOrientation} orientation orientation of the paper (size and source is a device setting)\r\n     * @property {MeasurementUnits} units measurement units for margins\r\n     * @property {Margins} margins margins to use\r\n     * */\r\n    var PageSettings;  // for doc generator\r\n\r\n    /**\r\n     * @typedef ExtraHeaderAndFooterSettings\r\n     * @memberof MeadCoScriptXPrintHTML\r\n     * @property {string} allPagesHeader\r\n     * @property {string} allPagesFooter\r\n     * @property {string} firstPageHeader\r\n     * @property {string} firstPageFooter\r\n     * @property {string} extraFirstPageFooter\r\n     * @property {number} allHeaderHeight\r\n     * @property {number} allFooterHeight\r\n     * @property {number} firstHeaderHeight\r\n     * @property {number} firstFooterHeight\r\n     * @property {number} extraFirstFooterHeight\r\n     * */\r\n    var ExtraHeaderAndFooterSettings;  // for doc generator\r\n\r\n    var settingsCache =\r\n    {\r\n        header: null,\r\n        footer: null,\r\n        headerFooterFont: null,\r\n        viewScale: 0,\r\n        locale: (navigator.languages && navigator.languages.length)\r\n            ? navigator.languages[0]\r\n            : navigator.language,\r\n        timezoneOffset: 0,\r\n        shortDateFormat: \"\",\r\n        longDateFormat: \"\",\r\n        printBackgroundColorsAndImages: false,\r\n        page: {\r\n            orientation: mPageOrientation.PORTRAIT,\r\n            units: MeadCo.ScriptX.Print.MeasurementUnits.DEFAULT,\r\n            margins: {\r\n                left: \"\",\r\n                top: \"\",\r\n                bottom: \"\",\r\n                right: \"\"\r\n            }\r\n        },\r\n        extraHeadersAndFooters: {\r\n        },\r\n        pageRange: \"\",\r\n        printingPass: mPrintingPass.ALL,\r\n        jobTitle: \"\",\r\n        documentUrl: document.URL\r\n    };\r\n\r\n    var iSettings =\r\n    {\r\n        set header(str) {\r\n            MeadCo.log(\"MeadCo.ScriptX.Print.HTML setting header: \" + str);\r\n            if (str && str.length === 0) {\r\n                str = \"%20\";\r\n            }\r\n            settingsCache.header = str;\r\n        },\r\n        get header() {\r\n            return (!settingsCache.header || settingsCache.header === \"%20\") ? \"\" : settingsCache.header;\r\n        },\r\n\r\n        set footer(str) {\r\n            if (str && str.length === 0) {\r\n                str = \"%20\";\r\n            }\r\n            settingsCache.footer = str;\r\n        },\r\n\r\n        get footer() {\r\n            return (!settingsCache.footer || settingsCache.footer === \"%20\") ? \"\" : settingsCache.footer;\r\n        },\r\n\r\n        set headerFooterFont(str) {\r\n            if (str && str.length === 0) {\r\n                str = \"%20\";\r\n            }\r\n            settingsCache.headerFooterFont = str;\r\n        },\r\n\r\n        get headerFooterFont() {\r\n            return (!settingsCache.headerFooterFont || settingsCache.headerFooterFont === \"%20\") ? \"\" : settingsCache.headerFooterFont;\r\n        },\r\n\r\n        get locale() {\r\n            return settingsCache.locale;\r\n        },\r\n\r\n        set viewScale(x) {\r\n            settingsCache.viewScale = x;\r\n        },\r\n\r\n        get viewScale() {\r\n            return settingsCache.viewScale;\r\n        },\r\n\r\n        set locale(x) {\r\n            settingsCache.locale = x;\r\n        },\r\n\r\n        set shortDateFormat(x) {\r\n            settingsCache.shortDateFormat = x;\r\n        },\r\n\r\n        set longDateFormat(x) {\r\n            settingsCache.longDateFormat = x;\r\n        },\r\n\r\n        set printBackgroundColorsAndImages(b) {\r\n            settingsCache.printBackgroundColorsAndImages = b ? BooleanOption.TRUE : BooleanOption.FALSE;\r\n        },\r\n\r\n        get printBackgroundColorsAndImages() {\r\n            return settingsCache.printBackgroundColorsAndImages === BooleanOption.TRUE;\r\n        },\r\n\r\n        extraHeadersAndFooters: {\r\n            get allPagesHeader() {\r\n                return settingsCache.extraHeadersAndFooters.allPagesHeader;\r\n            },\r\n            set allPagesHeader(v) {\r\n                settingsCache.extraHeadersAndFooters.allPagesHeader = v;\r\n            },\r\n\r\n            get allPagesFooter() {\r\n                return settingsCache.extraHeadersAndFooters.allPagesFooter;\r\n            },\r\n            set allPagesFooter(v) {\r\n                settingsCache.extraHeadersAndFooters.allPagesFooter = v;\r\n            },\r\n\r\n            get firstPageHeader() {\r\n                return settingsCache.extraHeadersAndFooters.firstPageHeader;\r\n            },\r\n            set firstPageHeader(v) {\r\n                settingsCache.extraHeadersAndFooters.firstPageHeader = v;\r\n            },\r\n\r\n            get firstPageFooter() {\r\n                return settingsCache.extraHeadersAndFooters.firstPageFooter;\r\n            },\r\n            set firstPageFooter(v) {\r\n                settingsCache.extraHeadersAndFooters.firstPageFooter = v;\r\n            },\r\n\r\n            get extraFirstPageFooter() {\r\n                return settingsCache.extraHeadersAndFooters.extraFirstPageFooter;\r\n            },\r\n            set extraFirstPageFooter(v) {\r\n                settingsCache.extraHeadersAndFooters.extraFirstPageFooter = v;\r\n            },\r\n\r\n            get allHeaderHeight() {\r\n                return settingsCache.extraHeadersAndFooters.allHeaderHeight;\r\n            },\r\n            set allHeaderHeight(v) {\r\n                if (typeof v !== \"number\") {\r\n                    throw \"Invalid argument\";\r\n                }\r\n                settingsCache.extraHeadersAndFooters.allHeaderHeight = v;\r\n            },\r\n\r\n            get allFooterHeight() {\r\n                return settingsCache.extraHeadersAndFooters.allFooterHeight;\r\n            },\r\n            set allFooterHeight(v) {\r\n                if (typeof v !== \"number\") {\r\n                    throw \"Invalid argument\";\r\n                }\r\n                settingsCache.extraHeadersAndFooters.allFooterHeight = v;\r\n            },\r\n\r\n            get firstHeaderHeight() {\r\n                return settingsCache.extraHeadersAndFooters.firstHeaderHeight;\r\n            },\r\n            set firstHeaderHeight(v) {\r\n                if (typeof v !== \"number\") {\r\n                    throw \"Invalid argument\";\r\n                }\r\n                settingsCache.extraHeadersAndFooters.firstHeaderHeight = v;\r\n            },\r\n\r\n            get firstFooterHeight() {\r\n                return settingsCache.extraHeadersAndFooters.firstFooterHeight;\r\n            },\r\n            set firstFooterHeight(v) {\r\n                if (typeof v !== \"number\") {\r\n                    throw \"Invalid argument\";\r\n                }\r\n                settingsCache.extraHeadersAndFooters.firstFooterHeight = v;\r\n            },\r\n\r\n            get extraFirstFooterHeight() {\r\n                return settingsCache.extraHeadersAndFooters.extraFirstFooterHeight;\r\n            },\r\n            set extraFirstFooterHeight(v) {\r\n                if (typeof v !== \"number\") {\r\n                    throw \"Invalid argument\";\r\n                }\r\n                settingsCache.extraHeadersAndFooters.extraFirstFooterHeight = v;\r\n            }\r\n        },\r\n\r\n        page: {\r\n            set orientation(enumOrientation) {\r\n                settingsCache.page.orientation = enumOrientation;\r\n            },\r\n\r\n            get orientation() {\r\n                return settingsCache.page.orientation;\r\n            },\r\n\r\n            set units(enumUnits) {\r\n                settingsCache.page.units = enumUnits;\r\n            },\r\n\r\n            get units() {\r\n                return settingsCache.page.units;\r\n            },\r\n\r\n            margins: {\r\n                set left(n) {\r\n                    settingsCache.page.margins.left = n;\r\n                },\r\n\r\n                get left() {\r\n                    return settingsCache.page.margins.left;\r\n                },\r\n\r\n                set top(n) {\r\n                    settingsCache.page.margins.top = n;\r\n                },\r\n\r\n                get top() {\r\n                    return settingsCache.page.margins.top;\r\n                },\r\n\r\n                set bottom(n) {\r\n                    settingsCache.page.margins.bottom = n;\r\n                },\r\n\r\n                get bottom() {\r\n                    return settingsCache.page.margins.bottom;\r\n                },\r\n\r\n                set right(n) {\r\n                    settingsCache.page.margins.right = n;\r\n                },\r\n\r\n                get right() {\r\n                    return settingsCache.page.margins.right;\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        get pageRange() { return settingsCache.pageRange; },\r\n        set pageRange(v) { settingsCache.pageRange = v; },\r\n\r\n        get printingPass() { return settingsCache.printingPass; },\r\n        set printingPass(v) {\r\n            if (typeof v === \"number\" && v >= mPrintingPass.DEFAULT && v <= mPrintingPass.EVEN) {\r\n                settingsCache.printingPass = v;\r\n                return;\r\n            }\r\n            throw \"Invalid argument\";\r\n        }\r\n\r\n    };\r\n\r\n    function updateSettingsWithServerDefaults(sDefaults) {\r\n        if (sDefaults !== null) {\r\n            settingsCache = sDefaults;\r\n            settingsCache.locale = (navigator.languages && navigator.languages.length)\r\n                ? navigator.languages[0]\r\n                : navigator.language;\r\n            settingsCache.timezoneOffset = (new Date()).getTimezoneOffset();\r\n            settingsCache.documentUrl = document.URL;\r\n            MeadCo.log(\"Settings cache updated, .locale: [\" + settingsCache.locale + \"], .offset: \" + settingsCache.timezoneOffset);\r\n            return true;\r\n        }\r\n        else {\r\n            MeadCo.warn(\"Igoring attempt to updateSettingsWithServerDefaults with null\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function getBaseHref() {\r\n        var port = (window.location.port) ? ':' + window.location.port : '';\r\n        return window.location.protocol + '//' + window.location.hostname + port + window.location.pathname;\r\n    }\r\n\r\n    function persistData($element) {\r\n        // preserve all form values.\r\n        // Radiobuttons and checkboxes\r\n        jQuery(\":checked\", $element).each(function () {\r\n            this.setAttribute('checked', 'checked');\r\n        });\r\n\r\n        // simple text inputs - including html 5 types\r\n        var types = 'text search number email datetime datetime-local date month week time tel url color range'.split(' '),\r\n            len = types.length;\r\n\r\n        for (var i = 0; i < len; i++) {\r\n            jQuery(\"input[type=\" + types[i] + \"]\", $element).each(function () {\r\n                this.setAttribute('value', jQuery(this).val());\r\n            });\r\n        }\r\n\r\n        jQuery(\"select\", $element).each(function () {\r\n            var $select = jQuery(this);\r\n            jQuery(\"option\", $select).each(function () {\r\n                if ($select.val() === jQuery(this).val())\r\n                    this.setAttribute('selected', 'selected');\r\n            });\r\n        });\r\n\r\n        jQuery(\"textarea\", $element).each(function () {\r\n            this.innerHTML = jQuery(this).val();\r\n        });\r\n    }\r\n\r\n    // persistData with no jQuery dependency\r\n    function persistData2(rootElement) {\r\n        rootElement.querySelectorAll(\":checked\").forEach(e => {\r\n            e.setAttribute('checked', 'checked');\r\n        });\r\n\r\n        'text search number email datetime datetime-local date month week time tel url color range'.split(' ').forEach(t => {\r\n            rootElement.querySelectorAll(\"input[type=\" + t + \"]\").forEach(e => {\r\n                e.setAttribute(\"value\", e.value);\r\n            });\r\n        });\r\n\r\n        rootElement.querySelectorAll(\"select\").forEach(e => {\r\n            e.querySelectorAll(\"option\").forEach(o => {\r\n                o.removeAttribute('checked');\r\n                if (e.value === o.value) {\r\n                    o.setAttribute('selected', 'selected');\r\n                } else {\r\n                    o.removeAttribute('selected');\r\n                }\r\n            });\r\n        });\r\n\r\n        rootElement.querySelectorAll(\"textarea\").forEach(t => {\r\n            t.innerHTML = t.value;\r\n        });\r\n\r\n    }\r\n\r\n    function printableHtmlOfDocument($htmlDoc) {\r\n\r\n        persistData($htmlDoc);\r\n\r\n        var $html = $htmlDoc.clone();\r\n\r\n        jQuery(\"script\", $html).remove();\r\n        jQuery(\"object\", $html).remove();\r\n\r\n        if (!jQuery(\"head>base\", $html).length) {\r\n            MeadCo.log(\"No base element, fabricating one to: \" + getBaseHref());\r\n            var base = jQuery(\"<base>\",\r\n                {\r\n                    href: getBaseHref()\r\n                });\r\n            jQuery(\"head\", $html).prepend(base);\r\n        }\r\n\r\n        return $html.html();\r\n    }\r\n\r\n    function printableHtmlOfDocument2(theDocument) {\r\n        // save all data\r\n        persistData2(theDocument.documentElement);\r\n\r\n        let html = theDocument.documentElement.cloneNode(true);\r\n\r\n        // remove all object tags\r\n        // remove all script tags\r\n        html.querySelectorAll(\"object\").forEach(e => e.remove());\r\n        html.querySelectorAll(\"script\").forEach(e => e.remove());\r\n\r\n        if (html.querySelector(\"head>base\") === null) {\r\n            let base = document.createElement(\"base\");\r\n            base.setAttribute(\"href\", getBaseHref());\r\n            html.querySelector(\"head\").prepend(base);\r\n        }\r\n\r\n        return html.outerHTML;\r\n    }\r\n\r\n    function documentContent() {\r\n        if (this.jQuery && !MeadCo.fetchEnabled) {\r\n            return printableHtmlOfDocument(jQuery(\"html\"));\r\n        }\r\n\r\n        return printableHtmlOfDocument2(document);\r\n    }\r\n\r\n    function frameContent(sFrame) {\r\n        if (this.jQuery && !MeadCo.fetchEnabled) {\r\n            var $frame = jQuery(\"#\" + sFrame);\r\n\r\n            if (!$frame.length) {\r\n                $frame = jQuery('iframe[name=' + sFrame + ']');\r\n                if (!$frame.length) {\r\n                    throw new Error(\"Unable to get frame content - frame does not exist\");\r\n                }\r\n            }\r\n\r\n            return printableHtmlOfDocument($frame.contents().find(\"html\"));\r\n        }\r\n        else {\r\n            let f = document.getElementById(sFrame);\r\n\r\n            if (f == null) {\r\n                f = window.frames[sFrame];\r\n                if ( !f ) {\r\n                    throw new Error(\"Unable to get frame content - frame does not exist\");\r\n                }\r\n            }\r\n            else\r\n                f = f.contentWindow;\r\n\r\n            return printableHtmlOfDocument2(f.document);\r\n        }\r\n    }\r\n\r\n    function printHtmlAtServer(contentType, content, title, fnDone, fnCallback, data) {\r\n        var htmlPrintSettings = settingsCache;\r\n        htmlPrintSettings.jobTitle = title;\r\n        return MeadCo.ScriptX.Print.printHtml(contentType, content, htmlPrintSettings, fnDone, fnCallback, data);\r\n    }\r\n\r\n    // Save the default and for job printer names (i.e. current printer) to be used during preview\r\n    // A single iFrame exists for all preview content (as its not known when the preview window is closed so the \r\n    // iframe could be disposed of) so a function closure can't be enlisted to help.\r\n    //\r\n    // What needs to happen is once the preview has been generated then the system default printer is set as the \r\n    // browser will use that as the selected printer - only an issue of the print job printer does not match system \r\n    // default. For browsers to use this, they must be configured to do so. \r\n    //\r\n    var jobPrinterName;\r\n    var defaultPrinterName;\r\n\r\n    function previewHtml(contentType, content) {\r\n        MeadCo.ScriptX.Print.deviceSettingsForAsync(\"systemdefault\", (deviceSettings) => {\r\n            defaultPrinterName = deviceSettings.printerName\r\n            jobPrinterName = MeadCo.ScriptX.Print.printerName;\r\n\r\n            MeadCo.log(\"Starting preview html ... printer: \" + jobPrinterName);\r\n\r\n            // create screen covering foreground panel with dots animation .. fairly agnostic to any UI framework in use.\r\n            //\r\n            var pws = document.getElementById(\"scriptXServices-PreviewWaitScreen\");\r\n            if (pws == null) {\r\n                pws = document.createElement(\"DIV\");\r\n                pws.innerHTML = '&shy;<style>' +\r\n                    '.loader { background-color: rgba(0, 0, 0, 0.25); overflow: hidden; width: 100%; height: 100%; position: fixed;' +\r\n                    'top: 0; left: 0; display: flex;  align-items:center; align-content:center; justify-content: center; z-index: 10000; } ' +\r\n                    '.loader__element { border-radius: 100%; border: 5px solid #555; margin: 10px} ' +\r\n                    '.loader__element:nth-child(1) { animation: preloader .6s ease-in-out alternate infinite; } ' +\r\n                    '.loader__element:nth-child(2) { animation: preloader .6s ease-in-out alternate .2s infinite; } ' +\r\n                    '.loader__element:nth-child(3) { animation: preloader .6s ease-in-out alternate .4s infinite; } ' +\r\n                    '@keyframes preloader { 100% { transform: scale(2); } }' +\r\n                    '</style>';\r\n                document.body.appendChild(pws.childNodes[1]);\r\n\r\n                pws = document.createElement(\"DIV\");\r\n                pws.setAttribute(\"id\", \"scriptXServices-PreviewWaitScreen\");\r\n                pws.className = \"loader\";\r\n\r\n                for (var i = 0; i < 3; i++) {\r\n                    var dot = document.createElement(\"SPAN\");\r\n                    dot.className = \"loader__element\";\r\n                    pws.appendChild(dot);\r\n                }\r\n                document.body.appendChild(pws);\r\n            }\r\n            else\r\n                pws.style.display = \"flex\";\r\n\r\n            MeadCo.ScriptX.Print.requestHtmlPreview(contentType, content, settingsCache, function (errorIfNotNull) {\r\n                MeadCo.log(\"Preview procesing completed: \", errorIfNotNull);\r\n                pws.style.display = \"none\";\r\n            },\r\n                function (sDownloadUrl, jobId) {\r\n                    var previewUrl = MeadCo.makeServiceEndPoint(MeadCo.ScriptX.Print.serviceUrl, \"v1/Preview/\" + jobId + \"/\" + encodeURIComponent(document.URL));\r\n                    MeadCo.log(\"Preview is available: \" + previewUrl + \", ... printer: \" + jobPrinterName);\r\n                    var ifrm = document.getElementById(\"scriptXServices-PreviewFrame\");\r\n                    if (ifrm == null) {\r\n                        ifrm = document.createElement(\"IFRAME\");\r\n                        ifrm.setAttribute(\"id\", \"scriptXServices-PreviewFrame\");\r\n                        ifrm.style.width = 0;\r\n                        ifrm.style.height = 0;\r\n                        ifrm.style.display = \"none\";\r\n                        ifrm.style.visibility = \"hidden\";\r\n\r\n                        document.body.appendChild(ifrm);\r\n                        window.addEventListener(\"message\", function (event) {\r\n                            MeadCo.log(\"message from: \" + event + \", ... printer: \" + jobPrinterName);\r\n                            if (event.data === \"preview-wired\") {\r\n                                MeadCo.log(\"preview is wired ... printer: \" + jobPrinterName);\r\n                                MeadCo.ScriptX.Print.setSystemDefaultPrinterAsync(jobPrinterName, function () {\r\n                                    MeadCo.log(\"system default printer set, request print preview\");\r\n                                    ifrm.contentWindow.postMessage(\"preview\", MeadCo.ScriptX.Print.serviceUrl)\r\n                                    window.setTimeout(function () {\r\n                                        MeadCo.ScriptX.Print.setSystemDefaultPrinterAsync(defaultPrinterName, function () { },\r\n                                            function (errorMsg) {\r\n                                                MeadCo.error(\"Preview failed to restore current printer after preview: \" + errorMsg);\r\n                                                MeadCo.ScriptX.Print.reportError(errorMsg);\r\n                                            });\r\n                                    }, 500);\r\n                                }, function (errorMsg) {\r\n                                    MeadCo.error(\"Preview failed to set current printer for preview: \" + errorMsg);\r\n                                    MeadCo.ScriptX.Print.reportError(errorMsg);\r\n                                })\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                    ifrm.setAttribute(\"src\", previewUrl);\r\n                });\r\n        },\r\n            (errorTxt) => {\r\n                MeadCo.error(errorTxt);\r\n            });\r\n\r\n    }\r\n\r\n    MeadCo.log(\"MeadCo.ScriptX.Print.HTML \" + moduleversion + \" loaded.\");\r\n\r\n    // public API\r\n    return {\r\n        PageMarginUnits: mPageMarginUnits,\r\n        PageOrientation: mPageOrientation,\r\n        PrintingPasses: mPrintingPass,\r\n\r\n        /**\r\n         * The soft settings to use when printing html content - headers, footers and margins\r\n         * (Device settings such as papersize, printer are described with MeadCo.ScriptX.Print.deviceSettings)\r\n         *  \r\n         * @memberof MeadCoScriptXPrintHTML    \r\n         * @typedef Settings\r\n         * @property {string} header Page header for all pages.\r\n         * @property {string} footer Page footer for all pages.\r\n         * @property {string} headerFooterFont description of font to use for header/footer\r\n         * @property {number} viewScale the scaling to use when printing expressed as a percentage. -1 => scale to fit\r\n         * @property {string} locale language/locale - used for formatting date/time values in header/footer. defaults to client browser setting\r\n         * @property {number} timezoneOffset client browser timezone offset so server will print correct time\r\n         * @property {string} shortDateFormat formating string for short dates, if not provided then uses the locale default, or the server default\r\n         * @property {string} longDateFormat formating string for long dates, if not provided then uses the locale default, or the server default\r\n         * @property {BooleanOption} printBackgroundColorsAndImages True if background colours and images are to be printed.\r\n         * @property {PageSettings} page orientation and margins to use on the paper\r\n         * @property {ExtraHeaderAndFooterSettings} extraHeadersAndFooters enhanced headers and footers\r\n         * @property {string} pageRange the (set of) page ranges to print, if empty, print all.\r\n         * @property {PrintingPass} printingPass print all, or odd or even only?\r\n         * @property {string} jobTitle description to use on the job in the print queue\r\n         * @property {string} documentUrl the document url to use in headers and footers\r\n         */\r\n        settings: iSettings,\r\n\r\n        /**\r\n         * Get the complete currently displayed document as string of HTML.\r\n         * \r\n         * Form values are preserved in the source document then the document cloned.\r\n         * \r\n         * A base element is created if required.\r\n         * style elements are included.\r\n         * script and object elements are not included.\r\n         * \r\n         * @memberof MeadCoScriptXPrintHTML\r\n         * @property {string} documentContentToPrint the current content in the window document as html \r\n         * */\r\n        get documentContentToPrint() {\r\n            return documentContent();\r\n        },\r\n\r\n        /**\r\n         * Get the complete currently displayed document in a frame as string of HTML.\r\n         *\r\n         * Form values are preserved in the source document then the document cloned.\r\n         *\r\n         * A base element is created if required.\r\n         * style elements are included.\r\n         * script and object elements are not included.\r\n         *\r\n         * @memberof MeadCoScriptXPrintHTML\r\n         * @function frameContentToPrint\r\n         * @param {string} sFrame the name of the frame\r\n         * @returns {string} the current content in the frame window document as html\r\n         * */\r\n        frameContentToPrint: function (sFrame) {\r\n            return frameContent(sFrame);\r\n        },\r\n\r\n        /**\r\n         * Print the complete current document in the window using the settings made by property updates before this function is called.\r\n         *\r\n         * @memberof MeadCoScriptXPrintHTML    \r\n         * @function printDocument\r\n         * @param {function({string})} fnCallOnDone function to call when printing complete (and output returned), arg is null on no error, else error message.\r\n         * @param {function(status,sInformation,data)} fnCallback function to call when job status is updated\r\n         * @param {any} data object to give pass to fnCallback\r\n         * @returns {boolean} - true if a print was started (otherwise an error will be thrown)\r\n         */\r\n        printDocument: function (fnCallOnDone, fnCallback, data) {\r\n            return printHtmlAtServer(MeadCo.ScriptX.Print.ContentType.INNERHTML, documentContent(), document.title, fnCallOnDone, fnCallback, data);\r\n        },\r\n\r\n        /**\r\n         * Print the complete current document in the named iframe using the settings made by property updates before this function is called.\r\n         *\r\n         * @memberof MeadCoScriptXPrintHTML    \r\n         * @function printFrame\r\n         * @param {string} sFrame the name of the iframe whose content is to be printed.\r\n         * @param {function({string})} fnCallOnDone function to call when printing complete (and output returned), arg is null on no error, else error message.\r\n         * @param {function(status,sInformation,data)} fnCallback function to call when job status is updated\r\n         * @param {any} data object to give pass to fnCallback\r\n         * @return {boolean} - true if a print was started (otherwise an error will be thrown)\r\n         */\r\n        printFrame: function (sFrame, fnCallOnDone, fnCallback, data) {\r\n            return printHtmlAtServer(MeadCo.ScriptX.Print.ContentType.INNERHTML, frameContent(sFrame), document.title, fnCallOnDone, fnCallback, data);\r\n        },\r\n\r\n        /**\r\n         * Display a preview of the document as it will be printed.\r\n         * \r\n         * @memberof MeadCoScriptXPrintHTML\r\n         * @function previewDocument\r\n         */\r\n        previewDocument: function () {\r\n            previewHtml(MeadCo.ScriptX.Print.ContentType.INNERHTML, documentContent());\r\n        },\r\n\r\n        /**\r\n         * Display a preview of the frame content document it will be printed.\r\n         *\r\n         * @memberof MeadCoScriptXPrintHTML\r\n         * @function previewFrame\r\n         * @param {string} sFrame the name of the iframe whose content is to be printed.\r\n        */\r\n        previewFrame: function (sFrame) {\r\n            previewHtml(MeadCo.ScriptX.Print.ContentType.INNERHTML, frameContent(sFrame));\r\n        },\r\n\r\n        /**\r\n         * Print the document obtained by downloading the given url using the settings made by property updates before this function is called.\r\n         *\r\n         * @memberof MeadCoScriptXPrintHTML    \r\n         * @function printFromUrl\r\n         * @param {string} sUrl the fully qualified url to the document to be printed.\r\n         * @param {function({string})} fnCallOnDone function to call when printing complete (and output returned), arg is null on no error, else error message.\r\n         * @param {function(status,sInformation,data)} fnCallback function to call when job status is updated\r\n         * @param {any} data object to give pass to fnCallback\r\n         * @return {boolean} - true if a print was started (otherwise an error will be thrown)\r\n         */\r\n        printFromUrl: function (sUrl, fnCallOnDone, fnCallback, data) {\r\n            return printHtmlAtServer(MeadCo.ScriptX.Print.ContentType.URL, sUrl, sUrl, fnCallOnDone, fnCallback, data);\r\n        },\r\n\r\n        /**\r\n         * Print the fragment of html using the settings made by property updates before this function is called.\r\n         *\r\n         * @memberof MeadCoScriptXPrintHTML    \r\n         * @function printHtml\r\n         * @param {string} sHtml fragment/snippet of html to print, must be complete HTML document.\r\n         * @param {function({string})} fnCallOnDone function to call when printing complete (and output returned), arg is null on no error, else error message.\r\n         * @param {function(status,sInformation,data)} fnCallback function to call when job status is updated\r\n         * @param {any} data object to give pass to fnCallback\r\n         * @return {boolean} - true if a print was started (otherwise an error will be thrown)\r\n         */\r\n        printHtml: function (sHtml, fnCallOnDone, fnCallback, data) {\r\n            return printHtmlAtServer(MeadCo.ScriptX.Print.ContentType.HTML, sHtml, \"HTML snippet\", fnCallOnDone, fnCallback, data);\r\n        },\r\n\r\n        /**\r\n         * Specify the server and the subscription/license id to use on AJAX calls. No call is made in this function\r\n         * \r\n         * @function connectLite\r\n         * @memberof MeadCoScriptXPrintHTML\r\n         * @param {string} serverUrl the 'root' url to the server (the api path will be added by the library)\r\n         * @param {string} licenseGuid the license/subscription identifier\r\n         */\r\n        connectLite: function (serverUrl, licenseGuid) {\r\n            MeadCo.ScriptX.Print.connectLite(serverUrl, licenseGuid);\r\n        },\r\n\r\n        /**\r\n         * Specify the server to use and the subscription/license id. \r\n         * \r\n         * Attempt to connect to the defined ScriptX.Services server and obtain\r\n         * default soft html and device settings for the default device as well as the list\r\n         * of available printers. \r\n         * \r\n         * This call is not required if client side code doesnt need to know about available printers\r\n         * but can assume (at least .connectLite() is required).\r\n         *\r\n         * This call is synchronous and therefore not recommended. Use connectAsync()\r\n         * \r\n         * @function connect\r\n         * @memberof MeadCoScriptXPrintHTML\r\n         * @param {string} serverUrl the 'root' url to the server (the api path will be added by the library)\r\n         * @param {string} licenseGuid the license/subscription identifier\r\n         * @param {function} onFail the function to call if an error occurs when making the connection\r\n         */\r\n        connect: function (serverUrl, licenseGuid, onFail) {\r\n            MeadCo.warn(\"Print.HTML SYNC connection request\");\r\n            MeadCo.ScriptX.Print.connectLite(serverUrl, licenseGuid);\r\n            MeadCo.ScriptX.Print.getFromServer(\"/htmlPrintDefaults/?units=\" + settingsCache.page.units, false,\r\n                function (data) {\r\n                    MeadCo.log(\"got default html settings\");\r\n                    updateSettingsWithServerDefaults(data.settings);\r\n                    if (data.device !== null) {\r\n                        MeadCo.ScriptX.Print.connectDeviceAndPrinters(data.device, data.availablePrinters);\r\n                    }\r\n                }, onFail);\r\n        },\r\n\r\n        /**\r\n         * Specify the server to use and the subscription/license id. \r\n         * \r\n         * Attempt to connect to the defined ScriptX.Services server and obtain\r\n         * default soft html and device settings for the default device as well as the list\r\n         * of available printers. \r\n         * \r\n         * This call is not required if client side code doesnt need to know about available printers\r\n         * but can assume (at least .connectLite() is required).\r\n         * \r\n         * @function connectAsync\r\n         * @memberof MeadCoScriptXPrintHTML\r\n         * @param {string} serverUrl the 'root' url to the server (the api path will be added by the library)\r\n         * @param {string} licenseGuid the license/subscription identifier\r\n         * @param {function} resolve function to call on success\r\n         * @param {function} reject function to call on failure\r\n         */\r\n        connectAsync: function (serverUrl, licenseGuid, resolve, reject) {\r\n            MeadCo.log(\"Print.HTML ASYNC connection request\");\r\n            MeadCo.ScriptX.Print.connectLite(serverUrl, licenseGuid);\r\n            MeadCo.ScriptX.Print.getFromServer(\"/htmlPrintDefaults/?units=\" + settingsCache.page.units, true,\r\n                function (data) {\r\n                    MeadCo.log(\"got default html settings\");\r\n                    if (updateSettingsWithServerDefaults(data.settings)) {\r\n                        if (data.device !== null) {\r\n                            MeadCo.ScriptX.Print.connectDeviceAndPrinters(data.device, data.availablePrinters);\r\n                        }\r\n                        resolve(2);\r\n                    }\r\n                    else {\r\n                        reject(\"Server did not respond with valid settings\");\r\n                    }\r\n                }, reject);\r\n        },\r\n\r\n        /**\r\n         * Get the version of this module as a string major.minor.hotfix.build\r\n         * @property {string} version\r\n         * @memberof MeadCoScriptXPrintHTML\r\n         */\r\n        get version() { return moduleversion; }\r\n\r\n    };\r\n\r\n});"]}