{"version":3,"file":"meadco-secmgr.min.js","names":["name","definition","undefined","this","document","getElementById","MeadCo","log","object","theModule","moduleversion","thisSpace","logApi","printApi","ScriptX","Print","licenseApi","Licensing","str","extendSecMgrNamespace","namespaces","split","scope","i","length","packageName","GetLicenseAsync","error","useAttributes","warn","version","result","validLicense","License","errorMessage","resolve","reject","PolyfillInit","PolyfillInitAsync","outerScope","secmgr"],"sources":["meadco-secmgr.js"],"mappings":"CAqCE,SAAWA,EAAMC,EAAYC,GAE3B,GAAIC,KAAKH,KAAUE,GAA+C,OAAlCE,SAASC,eAAeL,GAAgB,CAQpE,GAPAM,OAAOC,IAAI,uFACPJ,KAAKH,KAAUE,GACfI,OAAOC,IAAI,QAAUP,EAAO,gBAEM,OAAlCI,SAASC,eAAeL,IACxBM,OAAOC,IAAI,2BAA6BP,EAAO,gBAE/CG,KAAKH,GAAMQ,SAAWN,EAEtB,YADAI,OAAOC,IAAI,QAAUP,EAAO,0CAG5BM,OAAOC,IAAI,QAAUP,EAAO,4BAEpC,CAEAM,OAAOC,IAAI,+EACX,IAAIE,EAKK,WAGT,MAAMC,EAAgB,WAEhBC,EAAYR,KACZS,EAASN,OAGTO,EAAWP,OAAOQ,QAAQC,MAC1BC,EAAaV,OAAOQ,QAAQC,MAAME,UAExC,SAASV,EAAIW,GACTN,EAAOL,IAAI,uBAAyBW,EACxC,CAGAP,EAAUQ,sBAAwB,SAAUnB,EAAMC,GAC9C,MAAMQ,EAAYR,IAElBM,EAAI,iDAAmDP,GAEvD,MAAMoB,EAAapB,EAAKqB,MAAM,KAC9B,IAAIC,EAAQnB,KACZ,IAAK,IAAIoB,EAAI,EAAGA,EAAIH,EAAWI,OAAQD,IAAK,CACxC,MAAME,EAAcL,EAAWG,GAC3BA,IAAMH,EAAWI,OAAS,OACQ,IAAvBF,EAAMG,IACblB,EAAI,iCAAmCkB,GACvCH,EAAMG,GAAehB,GAErBF,EAAI,sCAAwCkB,QAEX,IAAvBH,EAAMG,IACpBlB,EAAI,qBAAuBkB,GAC3BH,EAAMG,GAAe,CAAC,GAEtBlB,EAAI,2BAA6BkB,GAErCH,EAAQA,EAAMG,EAClB,CACJ,EAEAlB,EAAI,oBACsC,mBAA/BS,EAAWU,iBAClBpB,OAAOqB,MAAM,gDAGqB,mBAA3Bd,EAASe,cAChBtB,OAAOuB,KAAK,oFAEZhB,EAASe,gBAIb,MAAO,CACHrB,IAAKA,EAQL,WAAIuB,GACA,OAAOpB,CACX,EAEA,UAAIqB,GACA,OAAOf,EAAWe,MACtB,EAEA,gBAAIC,GACA,OAAOhB,EAAWgB,YACtB,EAEA,WAAIC,GACA,OAAOjB,EAAWiB,OACtB,EASA,gBAAIC,GACA,OAAOlB,EAAWkB,YACtB,EAWAR,gBAAiB,SAAUS,EAASC,GAChCpB,EAAWU,gBAAgBS,EAASC,EACxC,EAIAC,aAAc,WACV,OAAOrB,EAAWqB,cACtB,EAEAC,kBAAmB,SAAUH,EAASC,GAClCpB,EAAWsB,kBAAkBH,EAASC,EAC1C,EAER,CAvHoBnC,GAGhB,KAAOD,GAAQS,CAElB,CAxBC,CAwBC,UAsHsC,mBAA1BU,uBACPA,sBAEL,iBAAiB,WAGhB,IAAIoB,EAAapC,KAajB,OAXAoC,EAAWC,OAAOjC,IAAI,yBAWfgC,EAAWC,MACtB","ignoreList":[],"sourcesContent":["/**\r\n * MeadCo ScriptX 'window.secmgr' shim (support for modern browsers and IE 11) JS client library\r\n *\r\n * The MeadCo Security Manager Add-on for Internet Explorer is included on a html document with an &lt;object id='secmgr' /&gt; element with a de-facto standard id of 'secmgr'.\r\n *\r\n * The object is referenced with the property window.secmgr which exposes properties and methods.\r\n * \r\n * The MeadCo Security Manager Add-on for Internet Explorer provided for prompting the user to accept use of the license that enabled advanced features of ScriptX.Add-on. Frequently\r\n * there was then no further reference to Security Manager and in such cases this shim is not required.\r\n * \r\n * This use case can be emulated by using appropriate attributes on an element (for example a &lt;script&gt;&lt;/script&gt;) on the page and including meadco-scriptxprint.js to process the attributes. This shim is then *not* required.\r\n * \r\n * Please note that when working with ScriptX.Services for Windows PC meadco-scriptxprintlicensing.js is required even with the use of attributes.\r\n * \r\n * This shim is required if you have code that relies upon being able to inspect the availability of a license.\r\n * \r\n * Full documentation on the properties/methods is provided by the technical reference documentation for the ScriptX Add-on for Internet Explorer: https://www.meadroid.com/Developers/KnowledgeBank/TechnicalReference/ScriptXAddOn/secmgr. That documentation is not reproduced here.\r\n *\r\n * If the startup script determines that the MeadCo Security Manager Add-on for IE is already active then it will quietly give priority to the object. In other words, the Add-on has precedence on Internet Explorer.\r\n *\r\n * This enables the same experience (almost) to be delivered to any browser on any device with the same html/javascript code.\r\n *\r\n * It is strongly recommended that the MeadCoScriptJS library (https://github.com/MeadCo/MeadCoScriptXJS) is used in conjunction with this library as it provides code (Promises) to assist\r\n * with working with the significant difference between the synchronous nature of the functions of ScriptX.Add-on (which hide the underlying asynchrony) and the asynchronous nature of javascript AJAX processing.\r\n * \r\n *  Requires: \r\n *  meadco-core.js\r\n *  meadco-scriptxprint.js\r\n *  meadco-scriptxprintlicensing.js\r\n *  \r\n * @namespace secmgr\r\n * \r\n */\r\n\r\n// we anti-polyfill &lt;object id=\"secmgr\" /&gt;\r\n// enabling old code to run in modern browsers\r\n//\r\n; (function (name, definition, undefined) {\r\n\r\n    if (this[name] !== undefined || document.getElementById(name) !== null) {\r\n        MeadCo.log(\"ScriptX.Services MeadCo Security Manager emulation believes it may not be required.\");\r\n        if (this[name] !== undefined) {\r\n            MeadCo.log(\"this[\" + name + \"] is defined\");\r\n        }\r\n        if (document.getElementById(name) !== null) {\r\n            MeadCo.log(\"document.getElementById(\" + name + \") is defined\");\r\n        }\r\n        if (this[name].object !== undefined) {\r\n            MeadCo.log(\"this[\" + name + \"].object is defined -- not required!!!\");\r\n            return;\r\n        } else {\r\n            MeadCo.log(\"this[\" + name + \"].object is *not* defined\");\r\n        }\r\n    }\r\n\r\n    MeadCo.log(\"ScriptX.Services MeadCo Security Manager emulation believes it is required.\");\r\n    var theModule = definition();\r\n\r\n    // Assign to the global object (window)\r\n    (this)[name] = theModule;\r\n\r\n})('secmgr', function () {\r\n\r\n    // protected API\r\n    const moduleversion = \"1.16.0.0\";\r\n    const emulatedVersion = \"8.2.0.0\";\r\n    const thisSpace = this;\r\n    const logApi = MeadCo;\r\n\r\n    // protected API\r\n    const printApi = MeadCo.ScriptX.Print;\r\n    const licenseApi = MeadCo.ScriptX.Print.Licensing;\r\n\r\n    function log(str) {\r\n        logApi.log(\"secmgr emulation :: \" + str);\r\n    }\r\n\r\n    // extend the namespace\r\n    thisSpace.extendSecMgrNamespace = function (name, definition) {\r\n        const theModule = definition();\r\n\r\n        log(\"MeadCo security manager extending namespace2: \" + name);\r\n        // walk/build the namespace part by part and assign the module to the leaf\r\n        const namespaces = name.split(\".\");\r\n        let scope = this;\r\n        for (let i = 0; i < namespaces.length; i++) {\r\n            const packageName = namespaces[i];\r\n            if (i === namespaces.length - 1) {\r\n                if (typeof scope[packageName] === \"undefined\") {\r\n                    log(\"installing implementation at: \" + packageName);\r\n                    scope[packageName] = theModule;\r\n                } else {\r\n                    log(\"Warning - not overwriting package: \" + packageName);\r\n                }\r\n            } else if (typeof scope[packageName] === \"undefined\") {\r\n                log(\"initialising new: \" + packageName);\r\n                scope[packageName] = {};\r\n            } else {\r\n                log(\"using existing package: \" + packageName);\r\n            }\r\n            scope = scope[packageName];\r\n        }\r\n    };\r\n\r\n    log(\"'secmgr' loaded.\");\r\n    if (typeof licenseApi.GetLicenseAsync !== \"function\") {\r\n        MeadCo.error(\"MeadCo.ScriptX.Print.Licensing not available\");\r\n    }\r\n\r\n    if (typeof printApi.useAttributes !== \"function\") {\r\n        MeadCo.warn(\"Attribute based licensing not available as MeadCo.ScriptX.Print is not available\");\r\n    } else {\r\n        printApi.useAttributes();\r\n    }\r\n\r\n    // public API.\r\n    return {\r\n        log: log,\r\n\r\n\r\n        /**\r\n         * Get the version of this module as a string major.minor.hotfix.build\r\n         * @property {string} version\r\n         * @memberof secmgr\r\n         */\r\n        get version() {\r\n            return moduleversion;\r\n        },\r\n\r\n        get result() {\r\n            return licenseApi.result;\r\n        },\r\n\r\n        get validLicense() {\r\n            return licenseApi.validLicense;\r\n        },\r\n\r\n        get License() {\r\n            return licenseApi.License;\r\n        },\r\n\r\n        /**\r\n         * Get the text of the last error.\r\n         * \r\n         * @property {string} errorMessage\r\n         * @memberof MeadCoScriptXPrintLicensing\r\n         * \r\n         */\r\n        get errorMessage() {\r\n            return licenseApi.errorMessage;\r\n        },\r\n\r\n        /**\r\n         * Get the details of the license using Asynchronous calls to the server.\r\n         * See meadco-scriptxprintlicensing.js for more detail\r\n         * @memberof secmgr\r\n         * @function GetLicenseAsync\r\n         * @param {function({license})} resolve function to call on successfulk completion\r\n         * @param {function({string})} reject function to call on failure with reason for failure\r\n         * \r\n         */\r\n        GetLicenseAsync: function (resolve, reject) {\r\n            licenseApi.GetLicenseAsync(resolve, reject);\r\n        },\r\n\r\n        // helpers for wrapper MeadCoJS - we apply the license here when working\r\n        // with ScriptX Services for Windows PC\r\n        PolyfillInit: function () {\r\n            return licenseApi.PolyfillInit();\r\n        },\r\n\r\n        PolyfillInitAsync: function (resolve, reject) {\r\n            licenseApi.PolyfillInitAsync(resolve, reject);\r\n        }\r\n    };\r\n});\r\n\r\n\r\n; (function (name, definition) {\r\n    if (typeof extendSecMgrNamespace === \"function\") {\r\n        extendSecMgrNamespace(name, definition);\r\n    }\r\n})('secmgr.object', function () {\r\n\r\n    // protected API\r\n    var outerScope = this;\r\n\r\n    outerScope.secmgr.log(\"secmgr.object loaded.\");\r\n\r\n    /*\r\n     * This completes the emulation of an  &lt;object /&gt; element\r\n     *\r\n     * Compatibility with Add-on to allow inspection of  &lt;object /&gt; and this javascript\r\n     * for the underlying object implementing 'secmgr'.\r\n     * \r\n     * @property {object} secmgr\r\n     * @memberof secmgrobject\r\n     */\r\n    return outerScope.secmgr;\r\n});\r\n"]}